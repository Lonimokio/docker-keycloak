{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": false,
  "adminEventsEnabled": false,
  "attributes": {
    "cibaAuthRequestedUserHint": "login_hint",
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaInterval": "5",
    "clientOfflineSessionIdleTimeout": "0",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "clientSessionMaxLifespan": "0",
    "oauth2DeviceCodeLifespan": "600",
    "oauth2DevicePollingInterval": "5",
    "parRequestUriLifespan": "60",
    "realmReusableOtpCode": "false"
  },
  "authenticationFlows": [
    {
      "alias": "Account verification options",
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Method with which to verity the existing account",
      "id": "536254c5-1d62-44f7-966e-2d6ea9040cfe",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Authentication Options",
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Authentication options.",
      "id": "d644306e-9900-4833-9201-640cb5f02e0f",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Browser - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "87264aaa-5d75-47af-9af7-c26f30ef4e1f",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Direct Grant - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "1f7dafa0-bd33-487d-a748-1986b25c6aff",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "First broker login - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP is required for the authentication",
      "id": "924ec719-726a-4174-a860-114d60c8482c",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "9dbd5f82-f810-4c6c-9e7b-99cee0f4c8e9",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Reset - Conditional OTP",
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "id": "b14768c2-114e-4062-82cf-7bfaca4f4609",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "User creation or linking",
      "authenticationExecutions": [
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Flow for the existing/non-existing user alternatives",
      "id": "32393e1a-2d08-4b77-841d-4a7af59710ba",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "d10ede1e-57c0-4c45-95b9-336452eb4d2e",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "04bbea01-95d3-4a82-a8ff-cb1a7e0fe009",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "d24dc2f9-5633-4c1d-9c23-6545471decc9",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "priority": 30,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "190a6136-4712-4694-9854-56f6c47e97c6",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "502e18e7-7e61-4c56-9f4a-4b309b1fb64c",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "c67c98df-3635-420c-b275-0ed17cfdee05",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "priority": 20,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "f1c481d0-00ae-4ab7-96e1-7bfd53c35e95",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "http challenge",
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "id": "a459228f-238f-4753-824a-93614cc95010",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "33a0c79d-cfd4-4864-81cc-d8d0316b499c",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "9fed1fd2-fa1b-4e4c-83e4-bc4ba75e9354",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "priority": 40,
          "requirement": "CONDITIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "c19ad4cd-f4ce-46d2-8dee-db0fb74485cc",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "16173aef-bf08-4ba0-a94a-5ba43e3c8fc0",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "afba9821-ab20-4668-83a2-d7f6ecf4206b"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "9dcc8862-8934-4b1f-9d5a-8b10733e44a9"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "clientPolicies": {
    "policies": []
  },
  "clientProfiles": {
    "profiles": []
  },
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account",
          "view-groups"
        ]
      }
    ]
  },
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "10ac5513-78b3-4f16-b642-25127d58258d",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "aa17d82a-6dbb-422b-9918-be698fdd4805",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a25a306f-9efe-40d3-a742-86ee639ed0c0",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e9dcfd1a-a4f3-4c19-899f-2c87ddc37643",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "b54d7518-2e55-4b81-906b-89f27f0d1ac8",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "31eda151-ec2c-4025-9c60-270d955142df",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "dfc9698e-977b-4a39-b05a-03903b506d33",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "1ef2374b-eac1-44dd-b222-1cab89e2df4c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "cd2d605f-ced7-498c-99f2-663426bcadfc",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "266e359b-b054-407f-beef-d75b4751772a",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4307eb64-e8e9-435d-8e01-c201acc2ffd9",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "jsonType.label": "long",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "406a6edd-c822-4dd9-90c1-9a0a908d1ed1",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "358cb801-703a-48d0-8a41-4bd56831e332",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e211ab0f-449f-49e0-9e72-6242a414b72f",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "6c877be6-07db-479f-89b0-1fdf7aa0109c",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "96e901f2-6da0-4451-a2ce-5ae264b6f411",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "51347f9f-1837-4588-8152-56454e4e3187",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7e449d8e-fbd5-4a06-b739-4fe636a6aad0",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "5fdcaf5f-9430-4ef1-9b92-01e518d9545e",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "88d477ed-4313-4bbf-8577-4df2515b3cbf",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7d0e72d2-19a4-4cd8-9d61-1344b7e578f2",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "763043ed-d7b3-4bdf-8b26-6e795119a8f0",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "2cd8dea2-0669-4c49-9129-14f428dd9609",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "4d29da31-bff9-493b-aa82-7dc6829ec2ec",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "ab31bf7b-bf98-4f2c-b48c-edc45e801d42",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "00e84edb-0713-461b-9cf8-08a9fbf4f81d",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "cd441718-55bc-45b3-9faa-d11e7ba3700b",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "65198286-1ebc-495f-adfa-52005eca7833",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {},
          "consentRequired": false,
          "id": "3c022fd9-1815-4a54-b817-31e4a02d59bd",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "aae40a90-99a0-4cc7-a4a3-1e0a7602308e",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "id": "e5fd760e-9192-453d-9887-5f0718accca0",
      "name": "acr",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a85e02db-8d80-463c-904b-4964da663d90",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "bb35cd05-4ad7-4093-8e3d-ad0fa9de19d5",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "af4fafed-e905-4da7-bf3d-22078ad44b88",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4bafacbf-d2e4-4d6a-857b-5ff6596119c4",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "8bce0387-2a32-40c3-993e-b5a69c41d148",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "69a73b3b-c1c7-4d57-8827-a04f577d63ce",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    }
  ],
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clients": [
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/$(env:KCP_REALM)/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "811a4270-e2a1-4ccb-b105-f39b478cbeab",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [
        "/realms/$(env:KCP_REALM)/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/realms/$(env:KCP_REALM)/account/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "4dd5d59d-ce67-445c-b199-ec9e26e238ef",
      "implicitFlowEnabled": false,
      "name": "${client_account-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "372ddf2f-ba33-401d-8931-cc982d0b23e9",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/realms/$(env:KCP_REALM)/account/*"
      ],
      "rootUrl": "${authBaseUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "bb681ad5-14cf-49f2-a651-485bd8a62a7d",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "aade798c-61b7-4474-babd-dae53b4742a9",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "alwaysDisplayInConsole": false,
      "attributes": {
        "pkce.code.challenge.method": "S256",
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/admin/$(env:KCP_REALM)/console/",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "acr",
        "profile",
        "roles",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "07981d3b-09cf-4e58-856a-2c3deea86fc1",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "9497919a-968a-416f-a477-1bc24ba3d7bf",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/admin/$(env:KCP_REALM)/console/*"
      ],
      "rootUrl": "${authAdminUrl}",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": [
        "+"
      ]
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "config": {
          "algorithm": [
            "HS256"
          ],
          "kid": [
            "dbfbbb94-1196-4f8f-bf16-e91b6624f079"
          ],
          "priority": [
            "100"
          ],
          "secret": [
            "N9lwuSFcAaPwfTkKCnA1oUX4O2xuC4VDR15LaYI535Cl0PhLyc23xJD91Q3bFQMaZqYPsO7Gy4IAZAsTkS3eAQ"
          ]
        },
        "id": "42b52fb4-f35a-4bb7-824c-3a2e5f65bb3d",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {}
      },
      {
        "config": {
          "kid": [
            "99f1443b-84a0-42f3-8138-a5f2a2060e53"
          ],
          "priority": [
            "100"
          ],
          "secret": [
            "8RhTeZtIy38ZbzS8OYKNgg"
          ]
        },
        "id": "63471b5f-9d45-49f0-95d6-a2b2ce6ae22b",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {}
      },
      {
        "config": {
          "certificate": [
            "MIICpTCCAY0CBgGIZlOlczANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtSQVNFTk1BRUhFUjAeFw0yMzA1MjkwNzAzNTdaFw0zMzA1MjkwNzA1MzdaMBYxFDASBgNVBAMMC1JBU0VOTUFFSEVSMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtKiCJJLCpIKY5TEAXxE8v2JxlCJ6AmZ20VAhORrLc66t1PaNwnFqfc4MrewPIRhHlH4fY1ilXSnzzC6CvcR5bgHZEErXV6vzgBM2EH1CcJTdsosVdk4zlutglWpdCLOWRMl7O52B9LEvbWeYf9zg7RALTBRxL0QQw/OYOxj+n6RZztL2J0ntua2h5wL3OjO0+uOxCcvpybXABgwwUA460GfsPtF9nIZwfFAzY1Ey7Uh1vru/Qe/RzWwWcyas3IL9C8HMkwVJLnpT+CJVfRm2ckgqmPUWaWk7iLHJRwoOUWcBbo0CgVkYdUbyBV2CzmsFdc1tNzSF2siUga3xbPt7QQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCWCSKpfw4H1Uzae8E3xxy/ZkkejsL1I5RSBL7QkQa+XormnAZwhsAXXIXIXYAky/sdfqNapUEjGd+3jqxssRDnrKoaS1KCufZ4ptu5wjtIMtoZ/qoiyE1u7CaSfYri0G7EKlTwkBiArowqhV4hbA/0aRZ4zBtG0iFxcilCO6m1w9yzKxG07bSyVHozDRKnMlElecomKbIquQEXGSW41/6nAxZR8fUri5mAoK1FtyIeF3aHqWgekcKTFYNL+X4lTYMVg6cLJmk+A+40jJ2YTqFpM/swTdSL14UCPznz3d0LuKrB2+E++LUtKcGQ/q9RFCQKQXihpbce+qIzNaroI4hv"
          ],
          "keyUse": [
            "SIG"
          ],
          "priority": [
            "100"
          ],
          "privateKey": [
            "MIIEogIBAAKCAQEAtKiCJJLCpIKY5TEAXxE8v2JxlCJ6AmZ20VAhORrLc66t1PaNwnFqfc4MrewPIRhHlH4fY1ilXSnzzC6CvcR5bgHZEErXV6vzgBM2EH1CcJTdsosVdk4zlutglWpdCLOWRMl7O52B9LEvbWeYf9zg7RALTBRxL0QQw/OYOxj+n6RZztL2J0ntua2h5wL3OjO0+uOxCcvpybXABgwwUA460GfsPtF9nIZwfFAzY1Ey7Uh1vru/Qe/RzWwWcyas3IL9C8HMkwVJLnpT+CJVfRm2ckgqmPUWaWk7iLHJRwoOUWcBbo0CgVkYdUbyBV2CzmsFdc1tNzSF2siUga3xbPt7QQIDAQABAoIBAAcrfObIsFLpH/pQpIwhWgDafll7uM3plSOfg4IJrzNrJlkCZAPojmppyBUK/lq45PZevw4pUX7OEG/1FJlFd/BGwH+mCL/hAiv+FzI2VnGzZs0UOgjU97UwqEelzgVvYzJdsLdf++1jLtevudyxPngKH/ioAwn2MJgmTc9ioZBiW0hOYKL88+kVaXvRfI0xJ00KlohX9/6zttlsGZMCYZkxgFOQkgeonarKzKyAlpRofaVXYjEWitQI8DgPUBSlPn//mECxtxF3d9qbaqOIQ4zu1Kvc1xTxaVxt72UzOJohBMmMrsCa+zDGQx09Z0rDq9/h4EPfTbQdwHtoLYIw43UCgYEA7rZgOtKpm/9+loaBl0EenN5puuYPJIW583zVg5CTSajKMiar204En9aUgogRB+r4YqyhfDekJAlM68vxgCV+smtWCTfQHVW4FSVrB8dFJG6YbpB2czUoLrD7H/k8F/KNajGHPxnLqTbrVy8yxI6M7mvRrxYvBJNOMGRNQq1QhnMCgYEAwb3VW6Bz8K2NxUbR2VxrwcZEqGRBBMf/lU6O3N3MkugffyHNfH1LDzRmzcNoBYKNSejDAYrDw48xWZn3cv5XiyswY4/E5KsixHmdsG8r9mMesmr3aKnSZFtgENUTkUFDAsJwU5EdDgZom5MW6Fu5nEAK4qtANQ7W8ulxhXkPFnsCgYAbN0/hZQNRdd/I6az8wb/rwq/rTy+KynRY/nKZfXJNg6EJ9r7BUjPUxXJJL5pBfNi051nB/9YHBchvWeE+6wd28CXvBx4DOjKytoFtcZrAfJuEf5QBrp3WNPdsvc3MLStSYDM7ToWZ1Vkfp5HyNw56YHCXtb/GlcTkX4svfvMfYQKBgGwY1PBYqBfDXfSSPQe/70egrjIeLcDTLiFKQZ+uCTR2Wwx9+b7Z0YVcQXfQ7TsVymtQeW1k1TFJtck+hLgefQ3jPQ5v6vWDHtTs3jTQ8oB4cWovEHfPONpRuVnq6Q4EkbT6c93Me5+Vp8wV15QxiXBKs0ghMKPp8bh606IbF3X9AoGACUhdnHlEoFpnQ/iy7T4SpODyMKZx5d4N5GcY1WKLLGfykRt2/ix7cGM6CgQJIfUULs17gP8FFjNSeovwMcFCHv3X3Gp04IS54nVl7OnEhOwVMKuawD0eU4OitOeAEeILIpQfk6WOIw0C57hsMiDmYovH+57tWgLlreT8j5oRwAI="
          ]
        },
        "id": "315ca5ba-10bb-4844-a0c5-ccd36934c69d",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "RSA-OAEP"
          ],
          "certificate": [
            "MIICpTCCAY0CBgGIZlOl+jANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtSQVNFTk1BRUhFUjAeFw0yMzA1MjkwNzAzNThaFw0zMzA1MjkwNzA1MzhaMBYxFDASBgNVBAMMC1JBU0VOTUFFSEVSMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0I9tjStq0+nzNFuFbubpZgQVXjOSK+DQ1ezsILWIySN792eukPOmwokknifPJ/R1tSvV2Rkv4+Zh2kCOQYeGQ1EgZAzeCDBJ6UnocPESYUoDuk+oXe+fj/V0zJn8md8GXY4F+RBrYOLoI3Ovbrr3yeGBme+NYerTS+nCUsLnWYL0H18kZc61cNCccBHfS+C6nti9Li8uFpJ3VE6wrB6NsardRZ4XSJcFnHq72BB5zYFdmBA/aMDi5R4LuyUgXvgHcpo/qZPCpT8VPWhQ1VJoCN34QyK2jRBmlRZ4/pXf4/aYaIUvgDqwahx5SlENTD7AHDcO86AAD7QCBcHpxniFuwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBSWLMTvdCCjrTPI4hCaORIS5al9qFdj3Dbn9AMjMup+3ALDIWzaToBUSRNr7gEc1v32SD7gI5JxZD1fadWq7eing7m9P6NXGyB5R+AM4dxHDlXLqGyD4Gxbr9FsT1NDTcWkdo1U2ihSxF000G/alRyxE58HdR50JfPO1JvH9vnrGSc0dfGbAztQ92L78Ggl+cGPhGtGEYryLItyRqASXKj0kqJ3JZ52CDjbo1gY34AWofwsn/nGlVGeseWhaoyemKpb+FXEdw7oO7RA6e1sTjzr+WrU9mBcIpt0PQ7jMxxg0MiZraKYUblsgWi0dbtbsdO2VOBJgI9/6ha9yv01+Yq"
          ],
          "keyUse": [
            "ENC"
          ],
          "priority": [
            "100"
          ],
          "privateKey": [
            "MIIEogIBAAKCAQEA0I9tjStq0+nzNFuFbubpZgQVXjOSK+DQ1ezsILWIySN792eukPOmwokknifPJ/R1tSvV2Rkv4+Zh2kCOQYeGQ1EgZAzeCDBJ6UnocPESYUoDuk+oXe+fj/V0zJn8md8GXY4F+RBrYOLoI3Ovbrr3yeGBme+NYerTS+nCUsLnWYL0H18kZc61cNCccBHfS+C6nti9Li8uFpJ3VE6wrB6NsardRZ4XSJcFnHq72BB5zYFdmBA/aMDi5R4LuyUgXvgHcpo/qZPCpT8VPWhQ1VJoCN34QyK2jRBmlRZ4/pXf4/aYaIUvgDqwahx5SlENTD7AHDcO86AAD7QCBcHpxniFuwIDAQABAoH/KT/wt9CArmk5ZDs+U5dpThDnF/Zfg9a3mXYG+aRlgx6KGX5wzLIO2p5WdROdy8lBOmlolaFuNUdCJGixU80tdDQXgMNxJscQ6GATssty8MshvmsC6oBPwg/BrE+VWaZ2CsaueNA1fcmFZLDatRR47ePn+fk8sKEwS5e0rN0B5P7QavusxNpUKos2W9rGOr64TYZEkahMlBUHBsGuurnbBKhPtnCWwOUJimnrOwwVx/pXKOXcJ7GO2sq1BRktNXKPmo55epGTfjES9djeZEioRS6Frq1YL2OSfpxKOXSy4yT5zBSODs/VsmmHdd38Pp5AWH5k0eo9gUhAIHHKCZwdAoGBAP+llafdSq53K41sJ992TzJznFsvnMDCgmAD4Q1UanT19AFQ0hl8F+p9+KPow5aDakhg584WFTiGHmCdyeIq6C94pGKyveQWEV5m+HBg09Pfv4wGgEYf6AB1RgOfV9r09KHfbkV8DPml3TXdO2XyOVKYjvX7zxYid998jzcoKJIlAoGBANDZMKocWLncHy8xFE1FYD1EdanSdRhgH5Dzer0HxrYWUZctgHs4cKis/y4gAlEyg601naQe1DcwO1p/PvJ/GvOGbXZRdK+QhVlgW4GLJjBI8Uti5QrS81vCMp9UDmA6dcNChzrjJVMergaOTeFvk1oluZf4yFnmNh/LSbS7TgJfAoGAUL8gUfEXkZuaagTrYy2fPjQ+Ap87R7coLuOKxgcPyPmWpIO+mMYVV7+KNVtjy7qea1YQYYugEEZsed/c0E71H2lfor0KNWyy97pWZkhvH9DgU34KLhwNz3c7MhG2UjZkvmwwDEpuXrwA7u59wGmNqYT+QrvSYQ9qBXD2W1mX1vECgYEAsA3GlkAbE2JZ72BCKvlGrZ8eSTAegZPWSEzXtK3vduPNl9FFs5nabnaXDnzxNx2MHuFJqGZMotFH13vYxncbcxppAAqegLklkDhIKyXv5Vg4AEK3ra4yc7F7FxC2paviRd25PYzpk+4S6Xfgcx+paZ7PmyqfShlkmty1n2Md2aUCgYEArUAAf/Cb4siOg4VVv0i/sd2Sy17izTM3nVP5E1LnuNHwfogRbm5RDx4XoiUyoUEbHIhGu2C5I7cfBrANYPk+goTJwuQoM1lcgj0dPCywtohL0/Y7SNY6J8ybHjBV0ZME8mo9xjlmCbPVbIC1moXE5O57kjjzJQ9LF5DRVhNAMeQ="
          ]
        },
        "id": "289ce948-1815-48ae-a6c8-b4400d7be548",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {}
      }
    ],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "70d689ff-cb14-4a90-9b77-1395813f8ade",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "15c9f2d6-a291-4d8c-9607-eccf13704c3a",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "58eb36f1-b7c0-4489-ab70-01a891ac5761",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper"
          ]
        },
        "id": "24907326-4776-4ab5-b7af-05b0d4db3afc",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "30f88327-83e0-4353-9caf-ff54661d9985",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "c7c997d8-695b-4291-acee-c3e51d6f758b",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "aa763f2e-231c-4ee3-b996-cc63b780beb0",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper"
          ]
        },
        "id": "cc5d60e2-db80-4bcb-a8fc-9c56c6be79e8",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      }
    ],
    "org.keycloak.storage.UserStorageProvider": [
      {
        "config": {
          "allowKerberosAuthentication": [
            "false"
          ],
          "authType": [
            "simple"
          ],
          "bindCredential": [
            "$(env:LDAP_ADMIN_PASSWORD)"
          ],
          "bindDn": [
            "cn=admin,dc=example,dc=org"
          ],
          "cachePolicy": [
            "DEFAULT"
          ],
          "changedSyncPeriod": [
            "-1"
          ],
          "connectionPooling": [
            "false"
          ],
          "connectionUrl": [
            "$(env:LDAP_CONNECTION_URL)"
          ],
          "editMode": [
            "WRITABLE"
          ],
          "enabled": [
            "true"
          ],
          "fullSyncPeriod": [
            "-1"
          ],
          "importEnabled": [
            "true"
          ],
          "pagination": [
            "false"
          ],
          "rdnLDAPAttribute": [
            "uid"
          ],
          "startTls": [
            "false"
          ],
          "syncRegistrations": [
            "true"
          ],
          "trustEmail": [
            "false"
          ],
          "useKerberosForPasswordAuthentication": [
            "false"
          ],
          "usePasswordModifyExtendedOp": [
            "false"
          ],
          "useTruststoreSpi": [
            "ldapsOnly"
          ],
          "userObjectClasses": [
            "inetOrgPerson, organizationalPerson"
          ],
          "usernameLDAPAttribute": [
            "uid"
          ],
          "usersDn": [
            "ou=users,dc=example,dc=org"
          ],
          "uuidLDAPAttribute": [
            "entryUUID"
          ],
          "validatePasswordPolicy": [
            "false"
          ],
          "vendor": [
            "other"
          ]
        },
        "id": "273e4f54-dd7d-4ecd-94d3-d008f18778de",
        "name": "ldap",
        "providerId": "ldap",
        "subComponents": {
          "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
            {
              "config": {
                "always.read.value.from.ldap": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "mail"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "email"
                ]
              },
              "id": "cdd0e767-4ab0-4a63-9e8c-ff03a28d8a4e",
              "name": "email",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "createTimestamp"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "createTimestamp"
                ]
              },
              "id": "e8f41749-2376-4bd4-8ac0-c2c4ad617315",
              "name": "creation date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "sn"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "lastName"
                ]
              },
              "id": "9ba8af11-2906-47c9-aa55-4b4fa3a9d4ef",
              "name": "last name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "false"
                ],
                "ldap.attribute": [
                  "modifyTimestamp"
                ],
                "read.only": [
                  "true"
                ],
                "user.model.attribute": [
                  "modifyTimestamp"
                ]
              },
              "id": "52afca25-85ab-4fad-a0e2-087df641f0bb",
              "name": "modify date",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "true"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "cn"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "firstName"
                ]
              },
              "id": "05f033d4-b235-45e8-b918-593eefc57efb",
              "name": "first name",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "always.read.value.from.ldap": [
                  "false"
                ],
                "is.mandatory.in.ldap": [
                  "true"
                ],
                "ldap.attribute": [
                  "uid"
                ],
                "read.only": [
                  "false"
                ],
                "user.model.attribute": [
                  "username"
                ]
              },
              "id": "6841f3c4-426e-4546-ad4b-f89cc67d5ad9",
              "name": "username",
              "providerId": "user-attribute-ldap-mapper",
              "subComponents": {}
            },
            {
              "config": {
                "drop.non.existing.groups.during.sync": [
                  "true"
                ],
                "group.name.ldap.attribute": [
                  "cn"
                ],
                "group.object.classes": [
                  "groupOfNames"
                ],
                "groups.dn": [
                  "ou=groups,dc=example,dc=org"
                ],
                "groups.path": [
                  "/"
                ],
                "ignore.missing.groups": [
                  "false"
                ],
                "memberof.ldap.attribute": [
                  "memberOf"
                ],
                "membership.attribute.type": [
                  "DN"
                ],
                "membership.ldap.attribute": [
                  "member"
                ],
                "membership.user.ldap.attribute": [
                  "uid"
                ],
                "mode": [
                  "LDAP_ONLY"
                ],
                "preserve.group.inheritance": [
                  "true"
                ],
                "user.roles.retrieve.strategy": [
                  "LOAD_GROUPS_BY_MEMBER_ATTRIBUTE"
                ]
              },
              "id": "1003c85f-53a0-4522-949c-a8aa5f54081c",
              "name": "groups",
              "providerId": "group-ldap-mapper",
              "subComponents": {}
            }
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "config": {},
        "id": "eb10c20a-6b97-4320-997b-28d34a96574a",
        "providerId": "declarative-user-profile",
        "subComponents": {}
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "acr"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "defaultRole": {
    "clientRole": false,
    "composite": true,
    "containerId": "$(env:KCP_MAIN_ID)",
    "description": "${role_default-roles}",
    "id": "01daddfc-caa4-49b7-be31-5dffc1c76783",
    "name": "default-roles-rasenmaeher"
  },
  "defaultSignatureAlgorithm": "RS256",
  "directGrantFlow": "direct grant",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": false,
  "enabled": true,
  "enabledEventTypes": [],
  "eventsEnabled": false,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 30,
  "groups": [],
  "id": "$(env:KCP_MAIN_ID)",
  "identityProviderMappers": [],
  "identityProviders": [],
  "internationalizationEnabled": false,
  "keycloakVersion": "21.1.1",
  "loginWithEmailAllowed": false,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyCodeReusable": false,
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "totpAppGoogleName",
    "totpAppFreeOTPName",
    "totpAppMicrosoftAuthenticatorName"
  ],
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "$(env:KCP_REALM)",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": false,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "TERMS_AND_CONDITIONS",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "TERMS_AND_CONDITIONS"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    },
    {
      "alias": "delete_account",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Delete Account",
      "priority": 60,
      "providerId": "delete_account"
    },
    {
      "alias": "webauthn-register",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register",
      "priority": 70,
      "providerId": "webauthn-register"
    },
    {
      "alias": "webauthn-register-passwordless",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Webauthn Register Passwordless",
      "priority": 80,
      "providerId": "webauthn-register-passwordless"
    },
    {
      "alias": "update_user_locale",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update User Locale",
      "priority": 1000,
      "providerId": "update_user_locale"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": false,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "811a4270-e2a1-4ccb-b105-f39b478cbeab",
          "description": "${role_view-consent}",
          "id": "3b663d80-4fd2-41fc-bc1a-69b1405290b4",
          "name": "view-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "811a4270-e2a1-4ccb-b105-f39b478cbeab",
          "description": "${role_delete-account}",
          "id": "be7d6213-1177-452a-a231-a446ecc3f81b",
          "name": "delete-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "811a4270-e2a1-4ccb-b105-f39b478cbeab",
          "description": "${role_manage-account}",
          "id": "df7a4431-5283-493a-b9f9-c48cafeaf2f2",
          "name": "manage-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "811a4270-e2a1-4ccb-b105-f39b478cbeab",
          "description": "${role_view-profile}",
          "id": "fb8a78b4-1768-46fa-83f9-b5ef9dc6fb24",
          "name": "view-profile"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "811a4270-e2a1-4ccb-b105-f39b478cbeab",
          "description": "${role_view-groups}",
          "id": "43d29ce5-6863-4c6c-a602-db7d7a4647b5",
          "name": "view-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "containerId": "811a4270-e2a1-4ccb-b105-f39b478cbeab",
          "description": "${role_manage-consent}",
          "id": "9017bdf2-f848-45d3-9910-7fbfb48a40ba",
          "name": "manage-consent"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "811a4270-e2a1-4ccb-b105-f39b478cbeab",
          "description": "${role_view-applications}",
          "id": "224cfd12-982f-4447-8efd-59f4709cb04b",
          "name": "view-applications"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "811a4270-e2a1-4ccb-b105-f39b478cbeab",
          "description": "${role_manage-account-links}",
          "id": "c21b2f22-d2ce-47a0-9b97-a5a789dc84f6",
          "name": "manage-account-links"
        }
      ],
      "account-console": [],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "aade798c-61b7-4474-babd-dae53b4742a9",
          "description": "${role_read-token}",
          "id": "d49432bb-77ac-4b21-99e1-97050525006e",
          "name": "read-token"
        }
      ],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_view-events}",
          "id": "9c81881b-95d3-48f9-a6be-a17506d8b383",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_manage-identity-providers}",
          "id": "11813efe-1f40-48b7-a77e-142725aabc1f",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_query-clients}",
          "id": "adce994e-0c2e-4a92-9047-b94479516fd8",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_query-users}",
          "id": "77fcc321-16db-4ae0-8c17-94e16f7f2aab",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_query-groups}",
          "id": "8f479288-6f7b-4e78-a085-06763a681659",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_view-identity-providers}",
          "id": "2413f4b8-1a42-47fa-8b0c-76d40ac16b5c",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-events",
                "manage-identity-providers",
                "query-clients",
                "query-users",
                "view-identity-providers",
                "query-groups",
                "create-client",
                "view-users",
                "manage-events",
                "view-clients",
                "impersonation",
                "view-authorization",
                "query-realms",
                "manage-authorization",
                "manage-realm",
                "manage-users",
                "view-realm",
                "manage-clients"
              ]
            }
          },
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_realm-admin}",
          "id": "41715bd8-31f4-43a3-bcf1-758009bd57db",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_create-client}",
          "id": "ea124966-c0e0-4f1a-910d-bf54edf98713",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_view-users}",
          "id": "6cf15570-3ec8-4f9e-9507-24123dfd6500",
          "name": "view-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_manage-events}",
          "id": "036b8c35-0bde-402f-806a-d02f933e9790",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_view-clients}",
          "id": "5a5ebe8a-4f1c-4429-ae30-5784b2bbe0e6",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_impersonation}",
          "id": "d0865f68-d15a-46d7-97ec-bc20afbe858d",
          "name": "impersonation"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_view-authorization}",
          "id": "49c81ab1-595d-41c6-9d37-378e3b3c4e11",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_query-realms}",
          "id": "789e8002-3847-44a1-a0e6-d73006682847",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_manage-authorization}",
          "id": "33c8bd23-bcbf-4843-b29d-ddc33a98bc6f",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_manage-realm}",
          "id": "ea117b89-a5f1-45f3-93a8-adf64361a7f7",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_manage-users}",
          "id": "1919bc03-d76b-4d3c-b7ee-1fe0ea344a4c",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_view-realm}",
          "id": "2152dbae-2865-4cd7-b7f6-c813df4ff432",
          "name": "view-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "fb593b91-fe75-43b0-8cd7-cc23a6bcda0a",
          "description": "${role_manage-clients}",
          "id": "f758b8cd-b8f5-4c9f-81e1-9640f6e6c995",
          "name": "manage-clients"
        }
      ],
      "security-admin-console": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "$(env:KCP_MAIN_ID)",
        "description": "${role_uma_authorization}",
        "id": "7a6251ab-7126-46be-afd4-6d4b7ae7e1da",
        "name": "uma_authorization"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": true,
        "composites": {
          "client": {
            "account": [
              "manage-account",
              "view-profile"
            ]
          },
          "realm": [
            "offline_access",
            "uma_authorization"
          ]
        },
        "containerId": "$(env:KCP_MAIN_ID)",
        "description": "${role_default-roles}",
        "id": "01daddfc-caa4-49b7-be31-5dffc1c76783",
        "name": "default-roles-rasenmaeher"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "$(env:KCP_MAIN_ID)",
        "description": "${role_offline-access}",
        "id": "69cfe333-0df8-4cdc-8827-99aae2551c2b",
        "name": "offline_access"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {},
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "verifyEmail": false,
  "waitIncrementSeconds": 60,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicyRpId": "",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyUserVerificationRequirement": "not specified"
}
